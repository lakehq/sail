name: Spark tests

on:
  workflow_call:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      run_tests: ${{ ((github.event_name == 'pull_request' && (github.event.action == 'opened' || steps.match.outputs.result == 'true')) || github.event_name == 'push') && 'true' || 'false' }}
      sha_before: ${{ steps.info.outputs.sha_before }}
      sha_after: ${{ steps.info.outputs.sha_after }}
      ref_before: ${{ steps.info.outputs.ref_before }}
      ref_after: ${{ steps.info.outputs.ref_after }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/commit-info
        id: info

      - uses: ./.github/actions/commit-message-match
        id: match
        with:
          pattern: "\\[(spark )?tests?\\]"
          ignore_case: true

  test-after:
    name: After
    if: needs.setup.outputs.run_tests == 'true'
    uses: ./.github/workflows/run-spark-tests-internal.yml
    with:
      sha: ${{ needs.setup.outputs.sha_after }}
      ref: ${{ needs.setup.outputs.ref_after }}
      name: after
    needs:
      - setup

  test-before:
    name: Before
    if: needs.setup.outputs.run_tests == 'true'
    uses: ./.github/workflows/run-spark-tests-internal.yml
    with:
      sha: ${{ needs.setup.outputs.sha_before }}
      ref: ${{ needs.setup.outputs.ref_before }}
      name: before
    needs:
      - setup
      - test-after # test sequentially to improve cache hit rate

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs:
      - test-after
      - test-before
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: |
          wget -q -O /usr/local/bin/jq "https://github.com/jqlang/jq/releases/download/jq-1.7.1/jq-linux-amd64"
          chmod +x /usr/local/bin/jq
          jq --version

      - name: Download test logs after the code change
        uses: actions/download-artifact@v4
        with:
          name: test-logs-after
          path: /tmp/test-after

      - name: Download test logs before the code change
        uses: actions/download-artifact@v4
        with:
          name: test-logs-before
          path: /tmp/test-before

      - name: Generate test report
        run: |
          scripts/spark-tests/generate-test-report.sh \
          /tmp/test-after /tmp/test-before \
          > /tmp/test-report.md
          cat /tmp/test-report.md >> "$GITHUB_STEP_SUMMARY"

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: /tmp/test-report.md
          retention-days: 1

  report:
    name: Report
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs:
      - analyze
    steps:
      - name: Download test report
        uses: actions/download-artifact@v4
        with:
          name: test-report
          path: /tmp

      - name: Publish test report
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: spark-test-report
          path: /tmp/test-report.md
