name: Docs build

# This workflow uses the following variables from the environment:
# - FATHOM_SITE_ID (optional)
# - AWS_REGION (required for deployment)
# - AWS_ROLE_ARN (required for deployment)
# - AWS_S3_BUCKET (required for deployment)
# - AWS_CLOUDFRONT_DISTRIBUTION_ID (required for deployment)

on:
  workflow_call:
    inputs:
      stage:
        description: The stage ("dev" or "prod") for documentation release
        type: string
        required: true
      version:
        description: The documentation version ("main", "latest", or a version number)
        type: string
        required: true
      deploy:
        description: Whether to deploy the documentation site
        type: boolean
        default: false

env:
  ARTIFACT_NAME: docs-dist-${{ inputs.stage }}-${{ inputs.version }}
  SITE_URL: "https://${{ inputs.stage == 'prod' && 'docs' || 'docs.dev' }}.lakesail.com/sail/${{ inputs.version }}/"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: docs/${{ inputs.stage }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Hatch
        uses: pypa/hatch@install

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run code formatter
        env:
          FORMAT_OPTIONS: --check
        run: pnpm run format

      - name: Run code linter
        run: pnpm run lint

      - uses: actions/cache@v4
        name: Cache Python package
        id: cache-python-package
        with:
          path: |
            target/wheels
          key: python-package-${{ runner.os }}-${{ runner.arch }}-${{ github.sha }}

      - if: steps.cache-python-package.outputs.cache-hit != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - if: steps.cache-python-package.outputs.cache-hit != 'true'
        name: Set up Rust
        uses: ./.github/actions/setup-rust

      - if: steps.cache-python-package.outputs.cache-hit != 'true'
        name: Build Python package
        uses: PyO3/maturin-action@v1

      - name: Build Python documentation
        run: |
          hatch env create docs
          hatch run docs:install-pysail
          hatch run docs:build

      - name: Build VitePress site
        env:
          SAIL_SITE_URL: ${{ env.SITE_URL }}
          # The Fathom Analytics script will not be added if the site ID is not set.
          SAIL_FATHOM_SITE_ID: ${{ vars.FATHOM_SITE_ID }}
        run: |
          if [[ "${SAIL_SITE_URL}" == */main/ ]]; then
            version="$(hatch version)+$(git rev-parse --short=7 HEAD)"
          else
            version="$(hatch version)"
          fi
          export SAIL_VERSION="$version"
          pnpm run docs:build
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: docs/.vitepress/dist
          retention-days: 7

  deploy:
    name: Deploy
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-latest
    environment: docs/${{ inputs.stage }}
    permissions:
      id-token: write
    steps:
      - name: Get site base URL
        id: site-base-url
        uses: actions/github-script@v7
        env:
          SITE_URL: ${{ env.SITE_URL }}
        with:
          result-encoding: string
          script: |
            const url = new URL(process.env.SITE_URL);
            if (!url.pathname.endsWith("/")) {
              throw new Error("The site URL must end with '/'");
            }
            return url.pathname;

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: docs/.vitepress/dist

      - name: Display artifact directory structure
        run: find . -type f
        working-directory: docs/.vitepress/dist

      - name: Sync to S3
        run: |
          aws s3 sync docs/.vitepress/dist s3://${{ vars.AWS_S3_BUCKET }}${{ steps.site-base-url.outputs.result }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths '${{ steps.site-base-url.outputs.result }}*'
