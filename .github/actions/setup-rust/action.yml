name: Rust setup
description: Prepare Rust build environment and build cache
runs:
  using: composite
  steps:
    - name: Install protoc
      uses: arduino/setup-protoc@v3
      with:
        # Set the GitHub token to avoid rate limiting when using the GitHub API
        # to get the latest protoc release.
        repo-token: ${{ github.token }}

    # The Rust stable toolchain is likely installed already, but we need to check for updates.
    # The Rust nightly toolchain is needed for features used in e.g. code formatting.
    - name: Install Rust toolchains
      run: |
        rustup toolchain install stable --component rustfmt clippy
        rustup toolchain install nightly --component rustfmt
      shell: bash

    - name: Show versions
      id: versions
      run: |
        set -x
        protoc --version
        python -V
        rustc -vV
        set +x
        rust_release="$(rustc -vV | sed -ne 's/^release: *//p')"
        echo "rust_release=${rust_release}" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Configure cache
      id: config
      # In the script below, the outer heredoc is interpreted by the shell,
      # while the inner heredoc is interpreted by the `GITHUB_OUTPUT` file.
      run: |
        cat <<EOF >> "$GITHUB_OUTPUT"
        path<<TEXT
        ~/.cargo/bin/
        ~/.cargo/registry/index/
        ~/.cargo/registry/cache/
        ~/.cargo/git/
        target/**/build/
        target/**/deps/
        target/**/.fingerprint/
        TEXT
        EOF
        echo "label=${{ steps.versions.outputs.rust_release }}-${{ runner.os }}-${{ runner.arch }}" >> "$GITHUB_OUTPUT"
        echo "hash=${{ hashFiles('**/Cargo.toml', 'Cargo.lock') }}" >> "$GITHUB_OUTPUT"
      shell: bash

    - uses: actions/cache@v4
      if: ${{ github.event_name == 'push' }}
      with:
        path: ${{ steps.config.outputs.path }}
        key: setup-rust-${{ steps.config.outputs.label }}-${{ steps.config.outputs.hash }}

    # We do not save the cache for pull requests, so that more cache space can be reserved
    # for the default branch and cache eviction is less likely to happen.
    # We always use caches of the default branch for pull requests. The cache is still useful
    # if the dependencies do not differ too much between the default branch and the feature branch.
    - uses: actions/cache/restore@v4
      if: ${{ github.event_name != 'push' }}
      with:
        path: ${{ steps.config.outputs.path }}
        key: setup-rust-${{ steps.config.outputs.label }}-${{ steps.config.outputs.hash }}
        restore-keys: |
          setup-rust-${{ steps.config.outputs.label }}-

    # Incremental compilation is not beneficial for CI builds.
    # So we turn it off to speed up the build and reduce the cache size.
    - name: Set environment variables
      run: |
        echo CARGO_INCREMENTAL=0 >> "$GITHUB_ENV"
      shell: bash
