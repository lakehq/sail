name: Rust setup
description: Prepare Rust build environment and build cache
inputs:
  token:
    description: The GitHub token
    required: true
runs:
  using: composite
  steps:
    - name: Install protoc
      uses: arduino/setup-protoc@v3
      with:
        # Set the GitHub token to avoid rate limiting when using the GitHub API
        # to get the latest protoc release.
        repo-token: ${{ inputs.token }}

    # The Rust stable toolchain is likely installed already, but we need to check for updates.
    # The Rust nightly toolchain is needed for features used in e.g. code formatting.
    - name: Install Rust toolchains
      run: |
        rustup toolchain install stable --component rustfmt clippy
        rustup toolchain install nightly --component rustfmt
      shell: bash

    - name: Show versions
      id: versions
      run: |
        set -x
        protoc --version
        python -V
        rustc -vV
        set +x
        rust_release="$(rustc -vV | sed -ne 's/^release: *//p')"
        echo "rust_release=${rust_release}" >> "$GITHUB_OUTPUT"
      shell: bash

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/
          target/**/build/
          target/**/deps/
          target/**/.fingerprint/
        key: setup-rust-${{ steps.versions.outputs.rust_release }}-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.toml', 'Cargo.lock') }}

    # Incremental compilation is not beneficial for CI builds.
    # So we turn it off to speed up the build and reduce the cache size.
    - name: Set environment variables
      run: |
        echo CARGO_INCREMENTAL=0 >> "$GITHUB_ENV"
      shell: bash
