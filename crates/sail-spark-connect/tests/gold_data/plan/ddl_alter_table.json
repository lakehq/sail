{
  "tests": [
    {
      "input": "ALTER TABLE my_tab ADD COLUMN b STRING COMMENT \"abc\" NOT NULL COMMENT \"abc\"",
      "exception": "\n[ALTER_TABLE_COLUMN_DESCRIPTOR_DUPLICATE] ALTER TABLE ADD column b specifies descriptor \"COMMENT\" more than once, which is invalid.(line 1, pos 62)\n\n== SQL ==\nALTER TABLE my_tab ADD COLUMN b STRING COMMENT \"abc\" NOT NULL COMMENT \"abc\"\n--------------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"abc\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN b STRING DEFAULT \"123\" NOT NULL DEFAULT \"abc\"",
      "exception": "\n[ALTER_TABLE_COLUMN_DESCRIPTOR_DUPLICATE] ALTER TABLE ADD column b specifies descriptor \"DEFAULT\" more than once, which is invalid.(line 1, pos 62)\n\n== SQL ==\nALTER TABLE my_tab ADD COLUMN b STRING DEFAULT \"123\" NOT NULL DEFAULT \"abc\"\n--------------------------------------------------------------^^^\n",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "my_tab"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "b",
                        "quote_style": null
                      },
                      "data_type": {
                        "String": null
                      },
                      "collation": null,
                      "options": [
                        {
                          "name": null,
                          "option": {
                            "Default": {
                              "Value": {
                                "DoubleQuotedString": "123"
                              }
                            }
                          }
                        },
                        {
                          "name": null,
                          "option": "NotNull"
                        },
                        {
                          "name": null,
                          "option": {
                            "Default": {
                              "Value": {
                                "DoubleQuotedString": "abc"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN b STRING FIRST COMMENT \"abc\" AFTER y",
      "exception": "\n[ALTER_TABLE_COLUMN_DESCRIPTOR_DUPLICATE] ALTER TABLE ADD column b specifies descriptor \"FIRST|AFTER\" more than once, which is invalid.(line 1, pos 59)\n\n== SQL ==\nALTER TABLE my_tab ADD COLUMN b STRING FIRST COMMENT \"abc\" AFTER y\n-----------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN b STRING NOT NULL DEFAULT \"abc\" NOT NULL",
      "exception": "\n[ALTER_TABLE_COLUMN_DESCRIPTOR_DUPLICATE] ALTER TABLE ADD column b specifies descriptor \"NOT NULL\" more than once, which is invalid.(line 1, pos 62)\n\n== SQL ==\nALTER TABLE my_tab ADD COLUMN b STRING NOT NULL DEFAULT \"abc\" NOT NULL\n--------------------------------------------------------------^^^\n",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "my_tab"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "b",
                        "quote_style": null
                      },
                      "data_type": {
                        "String": null
                      },
                      "collation": null,
                      "options": [
                        {
                          "name": null,
                          "option": "NotNull"
                        },
                        {
                          "name": null,
                          "option": {
                            "Default": {
                              "Value": {
                                "DoubleQuotedString": "abc"
                              }
                            }
                          }
                        },
                        {
                          "name": null,
                          "option": "NotNull"
                        }
                      ]
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" DEFAULT 'abc' FIRST NOT NULL",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" DEFAULT 'abc' NOT NULL FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" FIRST DEFAULT 'abc' NOT NULL",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" FIRST NOT NULL DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" NOT NULL DEFAULT 'abc' FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING COMMENT \"a\" NOT NULL FIRST DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 48"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' COMMENT \"a\" FIRST NOT NULL",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 62"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' COMMENT \"a\" NOT NULL FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 62"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' FIRST COMMENT \"a\" NOT NULL",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' FIRST NOT NULL COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: NOT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' NOT NULL COMMENT \"a\" FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 71"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING DEFAULT 'abc' NOT NULL FIRST COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST COMMENT \"a\" DEFAULT 'abc' NOT NULL",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST COMMENT \"a\" NOT NULL DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST DEFAULT 'abc' COMMENT \"a\" NOT NULL",
      "output": {
        "failure": "invalid argument: extra tokens after statement: DEFAULT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST DEFAULT 'abc' NOT NULL COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: DEFAULT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST NOT NULL COMMENT \"a\" DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: extra tokens after statement: NOT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING FIRST NOT NULL DEFAULT 'abc' COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: NOT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL COMMENT \"a\" DEFAULT 'abc' FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 57"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL COMMENT \"a\" FIRST DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 57"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL DEFAULT 'abc' COMMENT \"a\" FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: string, found: \"a\" at Line: 1, Column: 71"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL DEFAULT 'abc' FIRST COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL FIRST COMMENT \"a\" DEFAULT 'abc'",
      "output": {
        "failure": "invalid argument: extra tokens after statement: COMMENT"
      }
    },
    {
      "input": "ALTER TABLE my_tab ADD COLUMN x STRING NOT NULL FIRST DEFAULT 'abc' COMMENT \"a\"",
      "output": {
        "failure": "invalid argument: extra tokens after statement: DEFAULT"
      }
    },
    {
      "input": "ALTER TABLE t1 ADD COLUMN x int NOT NULL DEFAULT 42",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "t1"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": [
                        {
                          "name": null,
                          "option": "NotNull"
                        },
                        {
                          "name": null,
                          "option": {
                            "Default": {
                              "Value": {
                                "Number": [
                                  "42",
                                  null
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE t1 ALTER COLUMN a.b.c DROP DEFAULT",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 30"
      }
    },
    {
      "input": "ALTER TABLE t1 ALTER COLUMN a.b.c DROP DEFAULT SET DEFAULT 42",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'SET'.(line 1, pos 47)\n\n== SQL ==\nALTER TABLE t1 ALTER COLUMN a.b.c DROP DEFAULT SET DEFAULT 42\n-----------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 30"
      }
    },
    {
      "input": "ALTER TABLE t1 ALTER COLUMN a.b.c SET DEFAULT ",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near end of input.(line 1, pos 46)\n\n== SQL ==\nALTER TABLE t1 ALTER COLUMN a.b.c SET DEFAULT \n----------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 30"
      }
    },
    {
      "input": "ALTER TABLE t1 ALTER COLUMN a.b.c SET DEFAULT ''",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 30"
      }
    },
    {
      "input": "ALTER TABLE t1 ALTER COLUMN a.b.c SET DEFAULT 42",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 30"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x int",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": []
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x int AFTER y",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": []
                    },
                    "column_position": {
                      "After": {
                        "value": "y",
                        "quote_style": null
                      }
                    }
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x int COMMENT 'doc'",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": [
                        {
                          "name": null,
                          "option": {
                            "Comment": "doc"
                          }
                        }
                      ]
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x int FIRST",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": []
                    },
                    "column_position": "First"
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x int NOT NULL",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "AddColumn": {
                    "column_keyword": true,
                    "if_not_exists": false,
                    "column_def": {
                      "name": {
                        "value": "x",
                        "quote_style": null
                      },
                      "data_type": {
                        "Int": null
                      },
                      "collation": null,
                      "options": [
                        {
                          "name": null,
                          "option": "NotNull"
                        }
                      ]
                    },
                    "column_position": null
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x.y.z int COMMENT 'doc'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: a data type name, found: . at Line: 1, Column: 36"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMN x.y.z int COMMENT 'doc', a.b string FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: a data type name, found: . at Line: 1, Column: 36"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMNS (x int COMMENT 'doc')",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: a data type name, found: ( at Line: 1, Column: 36"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMNS (x int)",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: a data type name, found: ( at Line: 1, Column: 36"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMNS x int",
      "output": {
        "failure": "invalid argument: extra tokens after statement: int"
      }
    },
    {
      "input": "ALTER TABLE table_name ADD COLUMNS x int, y string",
      "output": {
        "failure": "invalid argument: extra tokens after statement: int"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c DROP NOT NULL",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c SET NOT NULL",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c TYPE bad_type",
      "exception": "\n[UNSUPPORTED_DATATYPE] Unsupported data type \"BAD_TYPE\".(line 1, pos 47)\n\n== SQL ==\nALTER TABLE table_name ALTER COLUMN a.b.c TYPE bad_type\n-----------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT 'new comment'",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'COMMENT'.(line 1, pos 54)\n\n== SQL ==\nALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT 'new comment'\n------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT 'new comment' AFTER d",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'COMMENT'.(line 1, pos 54)\n\n== SQL ==\nALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT 'new comment' AFTER d\n------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT AFTER d",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'COMMENT'.(line 1, pos 54)\n\n== SQL ==\nALTER TABLE table_name ALTER COLUMN a.b.c TYPE bigint COMMENT AFTER d\n------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: SET/DROP NOT NULL, SET DEFAULT, or SET DATA TYPE after ALTER COLUMN, found: . at Line: 1, Column: 38"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c COMMENT 'new comment'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c FIRST",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c TYPE bigint",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c c INT",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c c INT AFTER other_col",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c c INT COMMENT 'new_comment'",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name CHANGE COLUMN a.b.c new_name INT",
      "exception": "\nRenaming column is not supported in Hive-style ALTER COLUMN, please run RENAME COLUMN instead.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name CHANGE COLUMN a.b.c new_name INT\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: identifier, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMN IF EXISTS a.b.c",
      "output": {
        "failure": "invalid argument: extra tokens after statement: ."
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMN IF EXISTS x, y, a.b.c",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: y at Line: 1, Column: 49"
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMN a.b.c",
      "output": {
        "failure": "invalid argument: extra tokens after statement: ."
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMN x, y, a.b.c",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: y at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMNS IF EXISTS x, y, a.b.c",
      "output": {
        "failure": "invalid argument: extra tokens after statement: IF"
      }
    },
    {
      "input": "ALTER TABLE table_name DROP COLUMNS x, y, a.b.c",
      "output": {
        "failure": "invalid argument: extra tokens after statement: x"
      }
    },
    {
      "input": "ALTER TABLE table_name PARTITION (a='1') CHANGE COLUMN a.b.c c INT",
      "exception": "\nOperation not allowed: ALTER TABLE table PARTITION partition_spec CHANGE COLUMN.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name PARTITION (a='1') CHANGE COLUMN a.b.c c INT\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: RENAME, found: CHANGE at Line: 1, Column: 42"
      }
    },
    {
      "input": "ALTER TABLE table_name PARTITION (a='1') REPLACE COLUMNS (x string)",
      "exception": "\nOperation not allowed: ALTER TABLE table PARTITION partition_spec REPLACE COLUMNS.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name PARTITION (a='1') REPLACE COLUMNS (x string)\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: RENAME, found: REPLACE at Line: 1, Column: 42"
      }
    },
    {
      "input": "ALTER TABLE table_name RENAME COLUMN a.b.c TO d",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: TO, found: . at Line: 1, Column: 39"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (a STRING COMMENT 'x' COMMENT 'y')",
      "exception": "\n[ALTER_TABLE_COLUMN_DESCRIPTOR_DUPLICATE] ALTER TABLE REPLACE column a specifies descriptor \"COMMENT\" more than once, which is invalid.(line 1, pos 61)\n\n== SQL ==\nALTER TABLE table_name REPLACE COLUMNS (a STRING COMMENT 'x' COMMENT 'y')\n-------------------------------------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (a.b.c string)",
      "exception": "\nReplacing with a nested column is not supported in Hive-style REPLACE COLUMNS.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name REPLACE COLUMNS (a.b.c string)\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string COMMENT 'x1')",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string COMMENT 'x1', y int COMMENT 'y1')",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string COMMENT 'x1', y int)",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string FIRST)",
      "exception": "\nColumn position is not supported in Hive-style REPLACE COLUMNS.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name REPLACE COLUMNS (x string FIRST)\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string NOT NULL)",
      "exception": "\nNOT NULL is not supported in Hive-style REPLACE COLUMNS.(line 1, pos 0)\n\n== SQL ==\nALTER TABLE table_name REPLACE COLUMNS (x string NOT NULL)\n^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name REPLACE COLUMNS (x string)",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: REPLACE at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name SET TBLPROPERTIES ('test' = 'test', 'comment' = 'new_comment')",
      "output": {
        "success": {
          "command": {
            "alterTable": {
              "table": [
                "table_name"
              ],
              "ifExists": false,
              "operations": [
                {
                  "SetTblProperties": {
                    "table_properties": [
                      {
                        "KeyValue": {
                          "key": {
                            "value": "test",
                            "quote_style": "'"
                          },
                          "value": {
                            "Value": {
                              "SingleQuotedString": "test"
                            }
                          }
                        }
                      },
                      {
                        "KeyValue": {
                          "key": {
                            "value": "comment",
                            "quote_style": "'"
                          },
                          "value": {
                            "Value": {
                              "SingleQuotedString": "new_comment"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "location": null
            },
            "planId": null,
            "sourceInfo": null
          }
        }
      }
    },
    {
      "input": "ALTER TABLE table_name UNSET TBLPROPERTIES ('comment', 'test')",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: UNSET at Line: 1, Column: 24"
      }
    },
    {
      "input": "ALTER TABLE table_name UNSET TBLPROPERTIES IF EXISTS ('comment', 'test')",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: ADD, RENAME, PARTITION, SWAP, DROP, or SET TBLPROPERTIES after ALTER TABLE, found: UNSET at Line: 1, Column: 24"
      }
    }
  ]
}
