{
  "tests": [
    {
      "input": "\nALTER DATABASE my-database\nSET DBPROPERTIES ('p1'='v1')",
      "exception": "\n[INVALID_IDENTIFIER] The identifier my-database is invalid. Please, consider quoting it with back-quotes as `my-database`.(line 2, pos 17)\n\n== SQL ==\n\nALTER DATABASE my-database\n-----------------^^^\nSET DBPROPERTIES ('p1'='v1')\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: one of VIEW or TABLE or INDEX or ROLE, found: DATABASE at Line: 2, Column: 7"
      }
    },
    {
      "input": "\nFROM test-table\nSELECT a\nSELECT b\n        ",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-table is invalid. Please, consider quoting it with back-quotes as `test-table`.(line 2, pos 9)\n\n== SQL ==\n\nFROM test-table\n---------^^^\nSELECT a\nSELECT b\n        \n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: an SQL statement, found: FROM at Line: 2, Column: 1"
      }
    },
    {
      "input": "CREATE DATABASE IF NOT EXISTS my-database",
      "exception": "\n[INVALID_IDENTIFIER] The identifier my-database is invalid. Please, consider quoting it with back-quotes as `my-database`.(line 1, pos 32)\n\n== SQL ==\nCREATE DATABASE IF NOT EXISTS my-database\n--------------------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "CREATE FUNCTION test-func as org.test.func",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-func is invalid. Please, consider quoting it with back-quotes as `test-func`.(line 1, pos 20)\n\n== SQL ==\nCREATE FUNCTION test-func as org.test.func\n--------------------^^^\n",
      "output": {
        "failure": "invalid argument: sql parser error: Expected: (, found: - at Line: 1, Column: 21"
      }
    },
    {
      "input": "DROP DATABASE my-database",
      "exception": "\n[INVALID_IDENTIFIER] The identifier my-database is invalid. Please, consider quoting it with back-quotes as `my-database`.(line 1, pos 16)\n\n== SQL ==\nDROP DATABASE my-database\n----------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "DROP FUNCTION test-func as org.test.func",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-func is invalid. Please, consider quoting it with back-quotes as `test-func`.(line 1, pos 18)\n\n== SQL ==\nDROP FUNCTION test-func as org.test.func\n------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "SHOW COLUMNS IN t FROM test-db",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-db is invalid. Please, consider quoting it with back-quotes as `test-db`.(line 1, pos 27)\n\n== SQL ==\nSHOW COLUMNS IN t FROM test-db\n---------------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "SHOW FUNCTIONS LIKE test-func",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-func is invalid. Please, consider quoting it with back-quotes as `test-func`.(line 1, pos 24)\n\n== SQL ==\nSHOW FUNCTIONS LIKE test-func\n------------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "SHOW TABLE EXTENDED IN hyphen-db LIKE \"str\"",
      "exception": "\n[INVALID_IDENTIFIER] The identifier hyphen-db is invalid. Please, consider quoting it with back-quotes as `hyphen-db`.(line 1, pos 29)\n\n== SQL ==\nSHOW TABLE EXTENDED IN hyphen-db LIKE \"str\"\n-----------------------------^^^\n",
      "output": {
        "failure": "not supported: Unsupported statement: SHOW TABLE EXTENDED IN hyphen db LIKE"
      }
    },
    {
      "input": "SHOW TABLES IN hyphen-database",
      "exception": "\n[INVALID_IDENTIFIER] The identifier hyphen-database is invalid. Please, consider quoting it with back-quotes as `hyphen-database`.(line 1, pos 21)\n\n== SQL ==\nSHOW TABLES IN hyphen-database\n---------------------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    },
    {
      "input": "USE test-test",
      "exception": "\n[INVALID_IDENTIFIER] The identifier test-test is invalid. Please, consider quoting it with back-quotes as `test-test`.(line 1, pos 8)\n\n== SQL ==\nUSE test-test\n--------^^^\n",
      "output": {
        "failure": "invalid argument: extra tokens after statement: -"
      }
    }
  ]
}
