{
  "tests": [
    {
      "input": {
        "query": "SELECT array_size(array('b', 'd', 'c', 'a'));",
        "result": [
          "4"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "array_size(array(b, d, c, a))",
              "nullable": false,
              "type": "integer",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT cardinality(array('b', 'd', 'c', 'a'));",
        "result": [
          "4"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "cardinality(array(b, d, c, a))",
              "nullable": false,
              "type": "integer",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT cardinality(map('a', 1, 'b', 2));",
        "result": [
          "2"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "cardinality(map(a, 1, b, 2))",
              "nullable": false,
              "type": "integer",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT concat('Spark', 'SQL');",
        "result": [
          "SparkSQL"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "concat(Spark, SQL)",
              "nullable": false,
              "type": "string",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT concat(array(1, 2, 3), array(4, 5), array(6));",
        "result": [
          "[1,2,3,4,5,6]"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "concat(array(1, 2, 3), array(4, 5), array(6))",
              "nullable": false,
              "type": {
                "type": "array",
                "elementType": "integer",
                "containsNull": false
              },
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT reverse('Spark SQL');",
        "result": [
          "LQS krapS"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "reverse(Spark SQL)",
              "nullable": false,
              "type": "string",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT reverse(array(2, 1, 4, 3));",
        "result": [
          "[3,4,1,2]"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "reverse(array(2, 1, 4, 3))",
              "nullable": false,
              "type": {
                "type": "array",
                "elementType": "integer",
                "containsNull": false
              },
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT size(array('b', 'd', 'c', 'a'));",
        "result": [
          "4"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "size(array(b, d, c, a))",
              "nullable": false,
              "type": "integer",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    },
    {
      "input": {
        "query": "SELECT size(map('a', 1, 'b', 2));",
        "result": [
          "2"
        ],
        "schema": {
          "type": "struct",
          "fields": [
            {
              "name": "size(map(a, 1, b, 2))",
              "nullable": false,
              "type": "integer",
              "metadata": {}
            }
          ]
        }
      },
      "output": {
        "success": "ok"
      }
    }
  ]
}
