{
  "tests": [
    {
      "input": "\nstruct<\n  struct:struct<deciMal:DECimal, anotherDecimal:decimAL(5,2)>,\n  MAP:Map<timestamp, varchar(10)>,\n  arrAy:Array<double>,\n  anotherArray:Array<char(9)>>\n    ",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "struct",
                "dataType": {
                  "struct": {
                    "fields": [
                      {
                        "name": "deciMal",
                        "dataType": {
                          "decimal128": {
                            "precision": 10,
                            "scale": 0
                          }
                        },
                        "nullable": true,
                        "metadata": []
                      },
                      {
                        "name": "anotherDecimal",
                        "dataType": {
                          "decimal128": {
                            "precision": 5,
                            "scale": 2
                          }
                        },
                        "nullable": true,
                        "metadata": []
                      }
                    ]
                  }
                },
                "nullable": true,
                "metadata": []
              },
              {
                "name": "MAP",
                "dataType": {
                  "map": {
                    "keyType": {
                      "timestamp": {
                        "timeUnit": "microsecond",
                        "timezoneInfo": "sQLConfigured"
                      }
                    },
                    "valueType": {
                      "configuredUtf8": {
                        "utf8Type": {
                          "varChar": {
                            "length": 10
                          }
                        }
                      }
                    },
                    "valueTypeNullable": true,
                    "keysSorted": false
                  }
                },
                "nullable": true,
                "metadata": []
              },
              {
                "name": "arrAy",
                "dataType": {
                  "list": {
                    "dataType": "float64",
                    "nullable": true
                  }
                },
                "nullable": true,
                "metadata": []
              },
              {
                "name": "anotherArray",
                "dataType": {
                  "list": {
                    "dataType": {
                      "configuredUtf8": {
                        "utf8Type": {
                          "char": {
                            "length": 9
                          }
                        }
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "Array<map<int, tinYint>>",
      "output": {
        "success": {
          "list": {
            "dataType": {
              "map": {
                "keyType": "int32",
                "valueType": "int8",
                "valueTypeNullable": true,
                "keysSorted": false
              }
            },
            "nullable": true
          }
        }
      }
    },
    {
      "input": "BINARY",
      "output": {
        "success": "configuredBinary"
      }
    },
    {
      "input": "BooLean",
      "output": {
        "success": "boolean"
      }
    },
    {
      "input": "ChaR(5)",
      "output": {
        "success": {
          "configuredUtf8": {
            "utf8Type": {
              "char": {
                "length": 5
              }
            }
          }
        }
      }
    },
    {
      "input": "ChaRacter(5)",
      "output": {
        "success": {
          "configuredUtf8": {
            "utf8Type": {
              "char": {
                "length": 5
              }
            }
          }
        }
      }
    },
    {
      "input": "DATE",
      "output": {
        "success": "date32"
      }
    },
    {
      "input": "Dec(10, 5)",
      "output": {
        "success": {
          "decimal128": {
            "precision": 10,
            "scale": 5
          }
        }
      }
    },
    {
      "input": "INT",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "INTEGER",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "INTERVAL YEAR TO MONTH",
      "output": {
        "success": {
          "interval": {
            "intervalUnit": "yearMonth",
            "startField": "year",
            "endField": "month"
          }
        }
      }
    },
    {
      "input": "MAP<int, STRING>",
      "output": {
        "success": {
          "map": {
            "keyType": "int32",
            "valueType": {
              "configuredUtf8": {
                "utf8Type": "configured"
              }
            },
            "valueTypeNullable": true,
            "keysSorted": false
          }
        }
      }
    },
    {
      "input": "MAP<int, struct<varchar:string>>",
      "output": {
        "success": {
          "map": {
            "keyType": "int32",
            "valueType": {
              "struct": {
                "fields": [
                  {
                    "name": "varchar",
                    "dataType": {
                      "configuredUtf8": {
                        "utf8Type": "configured"
                      }
                    },
                    "nullable": true,
                    "metadata": []
                  }
                ]
              }
            },
            "valueTypeNullable": true,
            "keysSorted": false
          }
        }
      }
    },
    {
      "input": "MAp<int, ARRAY<double>>",
      "output": {
        "success": {
          "map": {
            "keyType": "int32",
            "valueType": {
              "list": {
                "dataType": "float64",
                "nullable": true
              }
            },
            "valueTypeNullable": true,
            "keysSorted": false
          }
        }
      }
    },
    {
      "input": "Struct<TABLE: string, DATE:boolean>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "TABLE",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": "configured"
                  }
                },
                "nullable": true,
                "metadata": []
              },
              {
                "name": "DATE",
                "dataType": "boolean",
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "Struct<int: int, timestamp:timestamp>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "int",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "timestamp",
                "dataType": {
                  "timestamp": {
                    "timeUnit": "microsecond",
                    "timezoneInfo": "sQLConfigured"
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "Struct<x: INT, y: STRING COMMENT 'test'>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "x",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "y",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": "configured"
                  }
                },
                "nullable": true,
                "metadata": [
                  [
                    "comment",
                    "test"
                  ]
                ]
              }
            ]
          }
        }
      }
    },
    {
      "input": "array<doublE>",
      "output": {
        "success": {
          "list": {
            "dataType": "float64",
            "nullable": true
          }
        }
      }
    },
    {
      "input": "array<struct<tinYint:tinyint>>",
      "output": {
        "success": {
          "list": {
            "dataType": {
              "struct": {
                "fields": [
                  {
                    "name": "tinYint",
                    "dataType": "int8",
                    "nullable": true,
                    "metadata": []
                  }
                ]
              }
            },
            "nullable": true
          }
        }
      }
    },
    {
      "input": "bigint",
      "output": {
        "success": "int64"
      }
    },
    {
      "input": "cHaR(27)",
      "output": {
        "success": {
          "configuredUtf8": {
            "utf8Type": {
              "char": {
                "length": 27
              }
            }
          }
        }
      }
    },
    {
      "input": "dOUBle",
      "output": {
        "success": "float64"
      }
    },
    {
      "input": "deC",
      "output": {
        "success": {
          "decimal128": {
            "precision": 10,
            "scale": 0
          }
        }
      }
    },
    {
      "input": "decimal",
      "output": {
        "success": {
          "decimal128": {
            "precision": 10,
            "scale": 0
          }
        }
      }
    },
    {
      "input": "decimal(10, 5)",
      "output": {
        "success": {
          "decimal128": {
            "precision": 10,
            "scale": 5
          }
        }
      }
    },
    {
      "input": "float",
      "output": {
        "success": "float32"
      }
    },
    {
      "input": "integer",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "interval",
      "output": {
        "success": {
          "interval": {
            "intervalUnit": "monthDayNano",
            "startField": null,
            "endField": null
          }
        }
      }
    },
    {
      "input": "interval day to second",
      "output": {
        "success": {
          "duration": {
            "timeUnit": "microsecond"
          }
        }
      }
    },
    {
      "input": "it is not a data type",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'is'.(line 1, pos 3)\n\n== SQL ==\nit is not a data type\n---^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "smallINT",
      "output": {
        "success": "int16"
      }
    },
    {
      "input": "strUCt<>",
      "output": {
        "success": {
          "struct": {
            "fields": []
          }
        }
      }
    },
    {
      "input": "string",
      "output": {
        "success": {
          "configuredUtf8": {
            "utf8Type": "configured"
          }
        }
      }
    },
    {
      "input": "struct<`x+y`:int, `!@#$%^&*()`:string, `1_2.345<>:\"`:varchar(20)>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "x+y",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "!@#$%^&*()",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": "configured"
                  }
                },
                "nullable": true,
                "metadata": []
              },
              {
                "name": "1_2.345<>:\"",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": {
                      "varChar": {
                        "length": 20
                      }
                    }
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "struct<end: long, select: int, from: string>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "end",
                "dataType": "int64",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "select",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "from",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": "configured"
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "struct<intType: int, ts:timestamp>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "intType",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "ts",
                "dataType": {
                  "timestamp": {
                    "timeUnit": "microsecond",
                    "timezoneInfo": "sQLConfigured"
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "struct<x int, y string>",
      "output": {
        "success": {
          "struct": {
            "fields": [
              {
                "name": "x",
                "dataType": "int32",
                "nullable": true,
                "metadata": []
              },
              {
                "name": "y",
                "dataType": {
                  "configuredUtf8": {
                    "utf8Type": "configured"
                  }
                },
                "nullable": true,
                "metadata": []
              }
            ]
          }
        }
      }
    },
    {
      "input": "struct<x+y: int, 1.1:timestamp>",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near '+'.(line 1, pos 8)\n\n== SQL ==\nstruct<x+y: int, 1.1:timestamp>\n--------^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "struct<x: int",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near end of input: missing '>'.(line 1, pos 13)\n\n== SQL ==\nstruct<x: int\n-------------^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "timestamp",
      "output": {
        "success": {
          "timestamp": {
            "timeUnit": "microsecond",
            "timezoneInfo": "sQLConfigured"
          }
        }
      }
    },
    {
      "input": "timestamp_ltz",
      "output": {
        "success": {
          "timestamp": {
            "timeUnit": "microsecond",
            "timezoneInfo": "localTimeZone"
          }
        }
      }
    },
    {
      "input": "timestamp_ntz",
      "output": {
        "success": {
          "timestamp": {
            "timeUnit": "microsecond",
            "timezoneInfo": "noTimeZone"
          }
        }
      }
    },
    {
      "input": "tinYint",
      "output": {
        "success": "int8"
      }
    },
    {
      "input": "unknown",
      "exception": "\n[UNSUPPORTED_DATATYPE] Unsupported data type \"UNKNOWN\".(line 1, pos 0)\n\n== SQL ==\nunknown\n^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "unknown(1,2,3)",
      "exception": "\n[UNSUPPORTED_DATATYPE] Unsupported data type \"UNKNOWN(1,2,3)\".(line 1, pos 0)\n\n== SQL ==\nunknown(1,2,3)\n^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "varchAr(20)",
      "output": {
        "success": {
          "configuredUtf8": {
            "utf8Type": {
              "varChar": {
                "length": 20
              }
            }
          }
        }
      }
    },
    {
      "input": "void",
      "output": {
        "success": "null"
      }
    }
  ]
}
