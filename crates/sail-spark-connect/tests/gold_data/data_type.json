{
  "tests": [
    {
      "input": "\nstruct<\n  struct:struct<deciMal:DECimal, anotherDecimal:decimAL(5,2)>,\n  MAP:Map<timestamp, varchar(10)>,\n  arrAy:Array<double>,\n  anotherArray:Array<char(9)>>\n    ",
      "output": {
        "success": {
          "struct": [
            {
              "name": "struct",
              "dataType": {
                "struct": [
                  {
                    "name": "deciMal",
                    "dataType": {
                      "decimal128": [
                        10,
                        0
                      ]
                    },
                    "nullable": true,
                    "metadata": []
                  },
                  {
                    "name": "anotherDecimal",
                    "dataType": {
                      "decimal128": [
                        5,
                        2
                      ]
                    },
                    "nullable": true,
                    "metadata": []
                  }
                ]
              },
              "nullable": true,
              "metadata": []
            },
            {
              "name": "MAP",
              "dataType": {
                "map": [
                  {
                    "name": "entries",
                    "dataType": {
                      "struct": [
                        {
                          "name": "key",
                          "dataType": {
                            "timestamp": [
                              "microsecond",
                              null
                            ]
                          },
                          "nullable": false,
                          "metadata": []
                        },
                        {
                          "name": "value",
                          "dataType": {
                            "configuredUtf8": [
                              10,
                              "varChar"
                            ]
                          },
                          "nullable": true,
                          "metadata": []
                        }
                      ]
                    },
                    "nullable": false,
                    "metadata": []
                  },
                  false
                ]
              },
              "nullable": true,
              "metadata": []
            },
            {
              "name": "arrAy",
              "dataType": {
                "list": {
                  "name": "item",
                  "dataType": "float64",
                  "nullable": true,
                  "metadata": []
                }
              },
              "nullable": true,
              "metadata": []
            },
            {
              "name": "anotherArray",
              "dataType": {
                "list": {
                  "name": "item",
                  "dataType": {
                    "configuredUtf8": [
                      9,
                      "char"
                    ]
                  },
                  "nullable": true,
                  "metadata": []
                }
              },
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "Array<map<int, tinYint>>",
      "output": {
        "success": {
          "list": {
            "name": "item",
            "dataType": {
              "map": [
                {
                  "name": "entries",
                  "dataType": {
                    "struct": [
                      {
                        "name": "key",
                        "dataType": "int32",
                        "nullable": false,
                        "metadata": []
                      },
                      {
                        "name": "value",
                        "dataType": "int8",
                        "nullable": true,
                        "metadata": []
                      }
                    ]
                  },
                  "nullable": false,
                  "metadata": []
                },
                false
              ]
            },
            "nullable": true,
            "metadata": []
          }
        }
      }
    },
    {
      "input": "BINARY",
      "output": {
        "success": "binary"
      }
    },
    {
      "input": "BooLean",
      "output": {
        "success": "boolean"
      }
    },
    {
      "input": "ChaR(5)",
      "output": {
        "success": {
          "configuredUtf8": [
            5,
            "char"
          ]
        }
      }
    },
    {
      "input": "ChaRacter(5)",
      "output": {
        "success": {
          "configuredUtf8": [
            5,
            "char"
          ]
        }
      }
    },
    {
      "input": "DATE",
      "output": {
        "success": "date32"
      }
    },
    {
      "input": "Dec(10, 5)",
      "output": {
        "success": {
          "decimal128": [
            10,
            5
          ]
        }
      }
    },
    {
      "input": "INT",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "INTEGER",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "INTERVAL YEAR TO MONTH",
      "output": {
        "success": {
          "interval": [
            "yearMonth",
            "year",
            "month"
          ]
        }
      }
    },
    {
      "input": "MAP<int, STRING>",
      "output": {
        "success": {
          "map": [
            {
              "name": "entries",
              "dataType": {
                "struct": [
                  {
                    "name": "key",
                    "dataType": "int32",
                    "nullable": false,
                    "metadata": []
                  },
                  {
                    "name": "value",
                    "dataType": "utf8",
                    "nullable": true,
                    "metadata": []
                  }
                ]
              },
              "nullable": false,
              "metadata": []
            },
            false
          ]
        }
      }
    },
    {
      "input": "MAP<int, struct<varchar:string>>",
      "output": {
        "success": {
          "map": [
            {
              "name": "entries",
              "dataType": {
                "struct": [
                  {
                    "name": "key",
                    "dataType": "int32",
                    "nullable": false,
                    "metadata": []
                  },
                  {
                    "name": "value",
                    "dataType": {
                      "struct": [
                        {
                          "name": "varchar",
                          "dataType": "utf8",
                          "nullable": true,
                          "metadata": []
                        }
                      ]
                    },
                    "nullable": true,
                    "metadata": []
                  }
                ]
              },
              "nullable": false,
              "metadata": []
            },
            false
          ]
        }
      }
    },
    {
      "input": "MAp<int, ARRAY<double>>",
      "output": {
        "success": {
          "map": [
            {
              "name": "entries",
              "dataType": {
                "struct": [
                  {
                    "name": "key",
                    "dataType": "int32",
                    "nullable": false,
                    "metadata": []
                  },
                  {
                    "name": "value",
                    "dataType": {
                      "list": {
                        "name": "item",
                        "dataType": "float64",
                        "nullable": true,
                        "metadata": []
                      }
                    },
                    "nullable": true,
                    "metadata": []
                  }
                ]
              },
              "nullable": false,
              "metadata": []
            },
            false
          ]
        }
      }
    },
    {
      "input": "Struct<TABLE: string, DATE:boolean>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "TABLE",
              "dataType": "utf8",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "DATE",
              "dataType": "boolean",
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "Struct<int: int, timestamp:timestamp>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "int",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "timestamp",
              "dataType": {
                "timestamp": [
                  "microsecond",
                  null
                ]
              },
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "Struct<x: INT, y: STRING COMMENT 'test'>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "x",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "y",
              "dataType": "utf8",
              "nullable": true,
              "metadata": [
                [
                  "comment",
                  "test"
                ]
              ]
            }
          ]
        }
      }
    },
    {
      "input": "array<doublE>",
      "output": {
        "success": {
          "list": {
            "name": "item",
            "dataType": "float64",
            "nullable": true,
            "metadata": []
          }
        }
      }
    },
    {
      "input": "array<struct<tinYint:tinyint>>",
      "output": {
        "success": {
          "list": {
            "name": "item",
            "dataType": {
              "struct": [
                {
                  "name": "tinYint",
                  "dataType": "int8",
                  "nullable": true,
                  "metadata": []
                }
              ]
            },
            "nullable": true,
            "metadata": []
          }
        }
      }
    },
    {
      "input": "bigint",
      "output": {
        "success": "int64"
      }
    },
    {
      "input": "cHaR(27)",
      "output": {
        "success": {
          "configuredUtf8": [
            27,
            "char"
          ]
        }
      }
    },
    {
      "input": "dOUBle",
      "output": {
        "success": "float64"
      }
    },
    {
      "input": "deC",
      "output": {
        "success": {
          "decimal128": [
            10,
            0
          ]
        }
      }
    },
    {
      "input": "decimal",
      "output": {
        "success": {
          "decimal128": [
            10,
            0
          ]
        }
      }
    },
    {
      "input": "decimal(10, 5)",
      "output": {
        "success": {
          "decimal128": [
            10,
            5
          ]
        }
      }
    },
    {
      "input": "float",
      "output": {
        "success": "float32"
      }
    },
    {
      "input": "integer",
      "output": {
        "success": "int32"
      }
    },
    {
      "input": "interval",
      "output": {
        "success": {
          "interval": [
            "monthDayNano",
            null,
            null
          ]
        }
      }
    },
    {
      "input": "interval day to second",
      "output": {
        "success": {
          "duration": "microsecond"
        }
      }
    },
    {
      "input": "it is not a data type",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near 'is'.(line 1, pos 3)\n\n== SQL ==\nit is not a data type\n---^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "smallINT",
      "output": {
        "success": "int16"
      }
    },
    {
      "input": "strUCt<>",
      "output": {
        "success": {
          "struct": []
        }
      }
    },
    {
      "input": "string",
      "output": {
        "success": "utf8"
      }
    },
    {
      "input": "struct<`x+y`:int, `!@#$%^&*()`:string, `1_2.345<>:\"`:varchar(20)>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "x+y",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "!@#$%^&*()",
              "dataType": "utf8",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "1_2.345<>:\"",
              "dataType": {
                "configuredUtf8": [
                  20,
                  "varChar"
                ]
              },
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "struct<end: long, select: int, from: string>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "end",
              "dataType": "int64",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "select",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "from",
              "dataType": "utf8",
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "struct<intType: int, ts:timestamp>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "intType",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "ts",
              "dataType": {
                "timestamp": [
                  "microsecond",
                  null
                ]
              },
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "struct<x int, y string>",
      "output": {
        "success": {
          "struct": [
            {
              "name": "x",
              "dataType": "int32",
              "nullable": true,
              "metadata": []
            },
            {
              "name": "y",
              "dataType": "utf8",
              "nullable": true,
              "metadata": []
            }
          ]
        }
      }
    },
    {
      "input": "struct<x+y: int, 1.1:timestamp>",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near '+'.(line 1, pos 8)\n\n== SQL ==\nstruct<x+y: int, 1.1:timestamp>\n--------^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "struct<x: int",
      "exception": "\n[PARSE_SYNTAX_ERROR] Syntax error at or near end of input: missing '>'.(line 1, pos 13)\n\n== SQL ==\nstruct<x: int\n-------------^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "timestamp",
      "output": {
        "success": {
          "timestamp": [
            "microsecond",
            null
          ]
        }
      }
    },
    {
      "input": "timestamp_ltz",
      "output": {
        "success": {
          "timestamp": [
            "microsecond",
            "ltz"
          ]
        }
      }
    },
    {
      "input": "timestamp_ntz",
      "output": {
        "success": {
          "timestamp": [
            "microsecond",
            null
          ]
        }
      }
    },
    {
      "input": "tinYint",
      "output": {
        "success": "int8"
      }
    },
    {
      "input": "unknown",
      "exception": "\n[UNSUPPORTED_DATATYPE] Unsupported data type \"UNKNOWN\".(line 1, pos 0)\n\n== SQL ==\nunknown\n^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "unknown(1,2,3)",
      "exception": "\n[UNSUPPORTED_DATATYPE] Unsupported data type \"UNKNOWN(1,2,3)\".(line 1, pos 0)\n\n== SQL ==\nunknown(1,2,3)\n^^^\n",
      "output": {
        "failure": "error in JSON serde: expected value at line 1 column 1"
      }
    },
    {
      "input": "varchAr(20)",
      "output": {
        "success": {
          "configuredUtf8": [
            20,
            "varChar"
          ]
        }
      }
    },
    {
      "input": "void",
      "output": {
        "success": "null"
      }
    }
  ]
}
