{
  "tests": [
    {
      "input": "\nSELECT -- continued after the following block comments...\n/* Deeply nested comment.\n   This includes a single apostrophe to make sure we aren't decoding this part as a string.\nSELECT 'deep nest' AS n1;\n/* Second level of nesting...\nSELECT 'deeper nest' as n2;\n/* Third level of nesting...\nSELECT 'deepest nest' as n3;\n*/\nHoo boy. Still two deep...\n*/\nNow just one deep...\n*/\n* FROM a\n      ",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "\nSELECT TRANSFORM(a, b, c)\n  ROW FORMAT DELIMITED\n  FIELDS TERMINATED BY '\\t'\n  COLLECTION ITEMS TERMINATED BY '\u0002'\n  MAP KEYS TERMINATED BY '\u0003'\n  LINES TERMINATED BY '\\n'\n  NULL DEFINED AS 'null'\n  USING 'cat' AS (a, b, c)\n  ROW FORMAT DELIMITED\n  FIELDS TERMINATED BY '\\t'\n  COLLECTION ITEMS TERMINATED BY '\u0004'\n  MAP KEYS TERMINATED BY '\u0005'\n  LINES TERMINATED BY '\\n'\n  NULL DEFINED AS 'NULL'\nFROM testData\n      ",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "\nSELECT TRANSFORM(a, b, c)\nUSING 'cat'\nFROM testData\n      ",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "\nSELECT TRANSFORM(a, b, c)\nUSING 'cat' AS (a int, b string, c long)\nFROM testData\n      ",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "\nSELECT TRANSFORM(a, b, c)\nUSING 'cat' AS (a, b, c)\nFROM testData\n      ",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM (INSERT INTO BAR VALUES (2))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM (SELECT a AS x, b AS y FROM t) t(col1, col2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM S WHERE C1 IN (INSERT INTO T VALUES (2))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a LIMIT :limitA",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a LIMIT ?",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR SYSTEM_TIME AS OF '2019-01-29 00:37:58'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR SYSTEM_TIME AS OF (SELECT current_date())",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR SYSTEM_TIME AS OF current_date()",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR SYSTEM_VERSION AS OF 'Snapshot123456789'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR SYSTEM_VERSION AS OF 123456789",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR TIMESTAMP AS OF '2019-01-29 00:37:58'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR TIMESTAMP AS OF (SELECT current_date())",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR TIMESTAMP AS OF current_date()",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR VERSION AS OF 'Snapshot123456789'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c FOR VERSION AS OF 123456789",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c SYSTEM_TIME AS OF '2019-01-29 00:37:58'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c SYSTEM_TIME AS OF (SELECT current_date())",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c SYSTEM_TIME AS OF current_date()",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c SYSTEM_VERSION AS OF 'Snapshot123456789'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c SYSTEM_VERSION AS OF 123456789",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c TIMESTAMP AS OF '2019-01-29 00:37:58'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c TIMESTAMP AS OF (SELECT current_date())",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c TIMESTAMP AS OF col",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c TIMESTAMP AS OF current_date()",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c VERSION AS OF 'Snapshot123456789'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM a.b.c VERSION AS OF 123456789",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM parquet_t0 TABLESAMPLE(300M) s",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM parquet_t0 TABLESAMPLE(BUCKET 3 OUT OF 32 ON rand()) s",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM range(10) AS t",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM range(7) AS t(a)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM testData AS t(col1, col2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT * FROM testcat.db.tab",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT :",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT :-",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT :param_1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT ?",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT OVERLAY('Spark SQL' PLACING 'ANSI ' FROM 7 FOR 0)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT OVERLAY('Spark SQL' PLACING 'CORE' FROM 7)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT OVERLAY('Spark SQL' PLACING '_' FROM 6)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT OVERLAY('Spark SQL' PLACING 'tructured' FROM 2 FOR 4)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRANSFORM(a, b, c)\n  ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n  WITH SERDEPROPERTIES(\n    \"separatorChar\" = \"\\t\",\n    \"quoteChar\" = \"'\",\n    \"escapeChar\" = \"\\\\\")\n  USING 'cat' AS (a, b, c)\n  ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.OpenCSVSerde'\n  WITH SERDEPROPERTIES(\n    \"separatorChar\" = \"\\t\",\n    \"quoteChar\" = \"'\",\n    \"escapeChar\" = \"\\\\\")\nFROM testData",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM('xyz' FROM 'yxTomxx')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(BOTH '@$%&( )abc' FROM '@ $ % & ()abc ' )",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(BOTH FROM '  bunch o blanks  ')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(LEADING 'c []' FROM '[ ccccbcc ')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(LEADING FROM '  bunch o blanks  ')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(TRAILING 'c&^,.' FROM 'bc...,,,&&&ccc')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT TRIM(TRAILING FROM '  bunch o blanks  ')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT abs(:1Abc)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT abs(?)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT interval FROM VALUES ('abc') AS tbl(interval);",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "SELECT t.col1, t.col2 FROM (SELECT a AS x, b AS y FROM t) t(col1, col2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "sELEct * FroM a",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select (select max(b) from s) ss from t",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select *\nfrom t\nlateral view explode(x) expl\nlateral view outer json_tuple(x, y) jtup q, z",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select *\nfrom t\nlateral view explode(x) expl\npivot (\n  sum(x)\n  FOR y IN ('a', 'b')\n)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select *\nfrom t\nlateral view explode(x) expl\npivot (\n  sum(x)\n  FOR y IN ('a', 'b')\n)\nunpivot (\n  val FOR y IN (x)\n)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select *\nfrom t\nlateral view explode(x) expl\nunpivot (\n  val FOR y IN (x)\n)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * fRoM a",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from (from a select * select *)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from a, lateral (select * from b) bb, lateral (select * from c) cc",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from default.range(2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(2, arg1 => 'value1', arg2 => true)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(2, table (v1), arg1 => table (select 1))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(arg1 => 'value1', 2, arg2 => true)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(arg1 => 'value1', arg2 => true)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(arg1 => table (v1), 2, arg2 => true)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(arg1 => table (v1), arg2 => table (select 1))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(arg1 => table v1)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(group => 'abc')",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from my_tvf(table (v1), table (select 1))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from range(2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from spark_catalog.default.range(2)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t , lateral (select * from u) uu",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t as tt , u",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t cluster by a distribute by a",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t lateral view explode(x) expl as x",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t lateral view posexplode(x) posexpl as x, y",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t limit 10",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t limit cast(9 / 4 as int)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t tablesample(100 rows)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t tablesample(43 percent) as x",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t tablesample(bucket 11 out of 10) as x",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t tablesample(bucket 4 out of 10 on x) as x",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t tablesample(bucket 4 out of 10) as x",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t where a = (select b from s)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t window w1 as ()",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select * from t window w1 as () limit 10",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select 1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select 1;",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a from 1k.2m",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c having x < 1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c where x !< 1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c where x !> 1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c where x < 1",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c; ;;  ;",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b from db.c;;;",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select a, b;",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select all a, b from db.c",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select distinct a, b from db.c",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select from tbl",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select id from ((((((t0))))))",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select id from (t0)",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select ltrim(both 'S' from 'SS abc S'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    },
    {
      "input": "select rtrim(trailing 'S' from 'SS abc S'",
      "output": {
        "failure": "not supported: SQL to plan"
      }
    }
  ]
}
