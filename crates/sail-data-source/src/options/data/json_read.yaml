# References:
#   - [1] https://spark.apache.org/docs/4.0.0/sql-data-sources-json.html#data-source-option
#   - [2] https://github.com/apache/spark/blob/b0c2ba357bf080dd328b95e4a6402b134a641a1a/python/pyspark/sql/connect/readwriter.py#L146-L174

- key: schema_infer_max_records
  aliases:
    - schemaInferMaxRecords
  default: "1000"
  description: |
    The maximum number of rows to read from JSON files for schema inference if needed.
  supported: true
  rust_type: usize
  rust_deserialize_with: crate::options::serde::deserialize_usize

- key: compression
  aliases:
    - codec
  default: "UNCOMPRESSED"
  description: |
    Specifies the file compression type. The following compression types are supported:
      - `GZIP` or `GZ`
      - `BZIP2` or `BZ2`
      - `XZ`
      - `ZSTD` or `ZST`
      - `UNCOMPRESSED` or ""
  supported: true

- key: time_zone
  aliases:
    - timeZone
  default: ""
  description: |
    Sets the string that indicates a time zone ID to be used to format timestamps in the JSON data sources or
    partition values. The following formats of timeZone are supported:
      - Region-based zone ID: It should have the form 'area/city', such as 'America/Los_Angeles'.
      - Zone offset: It should be in the format '(+|-)HH:mm', for example '-08:00' or '+01:00'.
        Also 'UTC' and 'Z' are supported as aliases of '+00:00'.
    Other short names like 'CST' are not recommended to use because they can be ambiguous.
    Defaults to the Sail configuration option `session.time_zone` (to be implemented).
  supported: false

- key: primitives_as_string
  aliases:
    - primitivesAsString
  default: "false"
  description: |
    Infers all primitive values as a string type.
  supported: false
  

- key: prefers_decimal
  aliases:
    - prefersDecimal
  default: "false"
  description: |
    Infers all floating-point values as a decimal type. If the values do not fit in decimal, then it infers them as doubles.
  supported: false

- key: allow_comments
  aliases:
    - allowComments
  default: "false"
  description: |
    Ignores Java/C++ style comment in JSON records.
  supported: false

- key: allow_unquoted_field_names
  aliases:
    - allowUnquotedFieldNames
  default: "false"
  description: |
    Allows unquoted JSON field names.
  supported: false

- key: allow_single_quotes
  aliases:
    - allowSingleQuotes
  default: "true"
  description: |
    Allows single quotes in addition to double quotes.
  supported: false

- key: allow_numeric_leading_zeros
  aliases:
    - allowNumericLeadingZeros
  default: "false"
  description: |
    Allows leading zeros in numbers (e.g. 00012).
  supported: false

- key: allow_backslash_escaping_any_character
  aliases:
    - allowBackslashEscapingAnyCharacter
  default: "false"
  description: |
    Allows accepting quoting of all character using backslash quoting mechanism.
  supported: false

- key: mode
  default: "PERMISSIVE"
  description: |
    Allows a mode for dealing with corrupt records during parsing. It supports the following case-insensitive modes.
      - `PERMISSIVE`: When it meets a corrupted record, puts the malformed string into a field configured by
        `column_name_of_corrupt_record`, and sets malformed fields to null.
      - `DROPMALFORMED`: Ignores the whole corrupted records. This mode is unsupported in the JSON built-in functions.
      - `FAILFAST`: Throws an exception when it meets corrupted records.
  supported: false

- key: column_name_of_corrupt_record
  aliases:
    - columnNameOfCorruptRecord
  default: ""
  description: |
    Allows renaming the new field having malformed string created by `PERMISSIVE` mode.
    Defaults to the Sail configuration option `sql.column_name_of_corrupt_record` (to be implemented).
  supported: false

- key: date_format
  aliases:
    - dateFormat
  default: "yyyy-MM-dd"
  description: |
    Sets the string that indicates a date format. Custom date formats follow the formats at `Datetime` Patterns.
  supported: false

- key: timestamp_format
  aliases:
    - timestampFormat
  default: "yyyy-MM-dd'T'HH:mm:ss[.SSS][XXX]"
  description: |
    Sets the string that indicates a timestamp format. Custom date formats follow the formats at `Datetime` Patterns.
  supported: false

- key: timestamp_ntz_format
  aliases:
    - timestampNTZFormat
  default: "yyyy-MM-dd'T'HH:mm:ss[.SSS]"
  description: |
    Sets the string that indicates a timestamp without timezone format. Custom date formats follow the formats at
    `Datetime` Patterns.
  supported: false
  
- key: enable_date_time_parsing_fallback
  aliases:
    - enableDateTimeParsingFallback
  default: ""
  description: |
    Allows falling back to the backward compatible behavior of parsing dates and timestamps if values do not match the
    set patterns. Defaults to being enabled if the time parser policy has legacy settings or if no custom date or
    timestamp pattern was provided.
  supported: false

- key: multi_line
  aliases:
    - multiLine
  default: "false"
  description: |
    Parse one record, which may span multiple lines, per file. JSON built-in functions ignore this option.
  supported: false

- key: allow_unquoted_control_chars
  aliases:
    - allowUnquotedControlChars
  default: "false"
  description: |
    Allows JSON Strings to contain unquoted control characters (ASCII characters with value less than 32, including tab and line feed characters) or not.
  supported: false

- key: encoding
  default: ""
  description: |
    For reading, allows to forcibly set one of standard basic or extended encoding for the JSON files.
    For example UTF-16BE, UTF-32LE. The default value is detected automatically when `multi_line` is set to true.
    JSON built-in functions ignore this option.
  supported: false

- key: line_sep
  aliases:
    - lineSep
    - terminator
  default: ""
  description: |
    Sets the single character line separator that should be used for parsing.
    JSON built-in functions ignore this option. Supports \\r, \\r\\n and \\n.
    For reading, defaults to None (CRLF: \\r, \\r\\n and \\n).
  supported: false

- key: sampling_ratio
  aliases:
    - samplingRatio
  default: "1.0"
  description: |
    Defines fraction of input JSON objects used for schema inferring.
  supported: false

- key: drop_field_if_all_null
  aliases:
    - dropFieldIfAllNull
  default: "false"
  description: |
    Whether to ignore column of all null values or empty array during schema inference.
  supported: false

- key: locale
  default: "en-US"
  description: |
    Sets a locale as language tag in IETF BCP 47 format.
    For instance, locale is used while parsing dates and timestamps.
  supported: false

- key: allow_non_numeric_numbers
  aliases:
    - allowNonNumericNumbers
  default: "true"
  description: |
    Allows JSON parser to recognize set of “Not-a-Number” (NaN) tokens as legal floating number values.
      - `+INF`: For positive infinity, as well as alias of +Infinity and Infinity.
      - `-INF`: For negative infinity, alias -Infinity.
      - `NaN`: For other not-a-numbers, like result of division by zero.
  supported: false

- key: use_unsafe_row
  aliases:
    - useUnsafeRow
  default: ""
  description: |
    Whether to use UnsafeRow to represent struct result in the JSON parser.
    Defaults to the Sail configuration option `json.use_unsafe_row` (to be implemented).
  supported: false
