[workspace]
members = [
    "crates/*",
]
resolver = "2"

[workspace.package]
version = "0.3.3"
authors = ["LakeSail <hello@lakesail.com>"]
edition = "2021"
homepage = "https://lakesail.com"
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/lakehq/sail"
rust-version = "1.87.0"

[workspace.lints.clippy]
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"

[workspace.dependencies]
thiserror = { version = "2.0.12" }
tokio = { version = "1.47.1", features = ["full"] }
tokio-stream = "0.1.17"
pbjson = "0.7.0"
pbjson-types = "0.7.0"
pbjson-build = "0.7.0"
tower = { version = "0.5.2", features = ["full"] }
uuid = { version = "1.18.0", features = ["v4"] }
async-trait = "0.1.88"
async-recursion = "1.1.1"
async-stream = "0.3.6"
lazy_static = "1.5.0"
once_cell = "1.21.3"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.142"
# TODO: `serde_yaml` is deprecated. No satisfactory alternative exists yet, we may need to build our own in the future.
serde_yaml = "0.9.34"
monostate = "0.1.14"
regex = "1.11.1"
glob = "0.3.3"
chrono = "0.4.41"
chrono-tz = "0.10.4"
futures = "0.3.31"
comfy-table = "7.1.4"
html-escape = "0.2.13"
syn = "2.0.104"
quote = "1.0.40"
paste = "1.0.15"
proc-macro2 = "1.0.96"
prettyplease = "0.2.36"
phf = { version = "0.12.1", features = ["macros"] }
ryu = "1.0.20"
either = "1.15.0"
num-bigint = "0.4.6"
mimalloc = { version = "0.1.47", default-features = false }
rand = "0.9.2"
rand_chacha = "0.9.0"
rand_distr = "0.5.1"
url = "2.5.4"
lexical-core = { version = "1.0.5", default-features = false, features = ["write-integers", "write-floats", "parse-integers", "parse-floats"] }
aws-config = "1.8.3"
aws-credential-types = "1.2.4"
aws-smithy-runtime-api = "1.8.5"
aws-smithy-types = "1.3.2"
aws-smithy-async = "1.2.5"
clap = { version = "4.5.43", features = ["derive"] }
num_enum = "0.7.4"
num-traits = "0.2.19"
log = "0.4.27"
env_logger = "0.11.8"
fastrace = { version = "0.7.14", features = ["enable"] }
fastrace-opentelemetry = "0.13.0"
opentelemetry = "0.30.0"
opentelemetry_sdk = "0.30.0"
opentelemetry-otlp = { version = "0.30.0", features = ["tls", "tls-roots", "grpc-tonic"] }
figment = { version = "0.10.19", features = ["toml", "env"] }
kube = "1.1.0"
k8s-openapi = { version = "0.25.0", features = ["latest"] }
twox-hash = "2.1.1"
aes = "0.8.4"
aes-gcm = "0.10.3"
cbc = { version = "0.1.2", features = ["std"] }
base64 = "0.22.1"
md-5 = "0.10.6"
crc32fast = "1.5.0"
sha1 = "0.10.6"
half = { version = "2.6.0", features = ["serde", "num-traits", "zerocopy"] }
iana-time-zone = "0.1.63"
chumsky = { version = "0.10.1", default-features = false, features = ["pratt"] }
num = "0.4.3"
hf-hub = { version = "0.4.3", default-features = false, features = ["tokio"] }
reqwest = "0.12.22"
percent-encoding = "2.3.1"
rustls = "0.23.29"
dashmap = "6.1.0"
itertools = "0.14.0"
moka = { version = "0.12.10", features = ["sync"] }

######
# The versions of the following dependencies are managed manually.
######

# The `tonic` version must match the one used in `arrow-flight` (replace `RELEASE` with the release we are using):
#   https://github.com/apache/arrow-rs/blob/RELEASE/arrow-flight/Cargo.toml
tonic = { version = "0.12.3", features = ["tls", "tls-roots", "gzip", "zstd"] }
tonic-build = "0.12.3"
tonic-reflection = "0.12.3"
tonic-health = "0.12.3"
tonic-types = "0.12.3"
# The `prost` version must match the one used in `tonic` (replace `RELEASE` with the release we are using):
#   https://github.com/hyperium/tonic/blob/vRELEASE/tonic/Cargo.toml
prost-build = "0.13.5"
prost = "0.13.5"
datafusion = { version = "49.0.0", features = ["serde", "avro"] }
datafusion-common = { version = "49.0.0", features = ["object_store", "avro"] }
datafusion-expr = { version = "49.0.0" }
datafusion-expr-common = { version = "49.0.0" }
datafusion-execution = { version = "49.0.0" }
datafusion-physical-optimizer = { version = "49.0.0" }
datafusion-proto = { version = "49.0.0" }
datafusion-functions = { version = "49.0.0" }
datafusion-functions-nested = { version = "49.0.0" }
datafusion-physical-expr = { version = "49.0.0" }
datafusion-spark = { version = "49.0.0" }
datafusion-functions-json = { git = "https://github.com/lakehq/datafusion-functions-json.git", rev = "d199e09" }
# The `pyo3` version must match the one used in `arrow-pyarrow` (replace `RELEASE` with the release we are using):
#   https://github.com/apache/arrow-rs/blob/RELEASE/arrow-pyarrow/Cargo.toml
# auto-initialize: Changes [`Python::with_gil`] to automatically initialize the Python interpreter if needed.
pyo3 = { version = "0.24.2", features = ["auto-initialize", "serde"] }
arrow = { version = "55.2.0", features = ["chrono-tz"] }
arrow-buffer = { version = "55.2.0" }
arrow-schema = { version = "55.2.0", features = ["serde"] }
arrow-flight = { version = "55.2.0" }
arrow-pyarrow = { version = "55.2.0" }
parquet = { version = "55.2.0" }
serde_arrow = { version = "0.13.5", features = ["arrow-55"] }
# The `object_store` version must match the one used in DataFusion.
object_store = { version = "0.12.3", features = ["aws", "gcp", "azure", "http"] }
hdfs-native-object-store = "0.14.2"

# Lakehouse
deltalake = { git = "https://github.com/delta-io/delta-rs.git", rev = "5ac08eb", default-features = false, features = ["rustls"] }
delta_kernel = { version = "0.13.0", features = ["arrow-55", "internal-api", "default-engine"] }
bytes = "1.9.0"
indexmap = "2.10.0"

######
# This is the end of the manually managed dependencies.
# Do not add more dependencies below.
######

[patch.crates-io]
# Override dependencies to use our forked versions.
# You can use `path = "..."` to temporarily point to your local copy of the crates to speed up local development.

[profile.release]
# https://doc.rust-lang.org/cargo/reference/profiles.html#release
opt-level = 3
debug = false
strip = true # Eliminate debug info to minimize binary size
debug-assertions = false
overflow-checks = false
lto = true
panic = 'unwind'
incremental = false
codegen-units = 1
